{"version":3,"sources":["components/Container/index.js","components/Col/index.js","components/SearchForm/index.js","components/EmployeeCard/index.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","className","children","Col","size","split","map","join","SearchForm","htmlFor","value","onChange","handleInputChange","name","type","placeholder","id","onClick","handleFormSubmit","refreshPage","EmployeeCard","alt","firstName","src","picture","lastName","email","phone","city","Axios","get","App","state","employees","search","sortOrder","searchName","filter","console","log","filterEmployees","employee","Object","values","toLocaleLowerCase","indexOf","toLowerCase","setState","event","target","preventDefault","sortedFirst","this","sort","compareFirst","orderFirst","a","b","sortedLast","compareLast","orderLast","sortedEmail","compareEmail","orderEmail","API","then","res","data","results","i","first","last","large","location","key","catch","err","window","reload","sortFirstName","sortLastName","sortEmail","item","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28391cea.chunk.js","sourcesContent":["//dependencies\r\nimport React from \"react\";\r\n\r\n// this function makes the container that structures the page\r\nfunction Container(props) {\r\n  return <div className=\"container\" >{props.children}</div>;\r\n}\r\n\r\nexport default Container;","//dependencies\r\nimport React from \"react\";\r\n\r\n//this function determines the column size \r\nfunction Col(props) {\r\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\r\n\r\n  return <div className={size}>{props.children}</div>;\r\n}\r\n\r\nexport default Col;","//dependencies needed\r\nimport React from \"react\";\r\n\r\n//this function alllows for searching by employee name\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"search\">Employee Search:</label>\r\n        <input\r\n          value={props.value}\r\n          onChange={props.handleInputChange}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search by employee name\"\r\n          id=\"search\"\r\n        />\r\n        <button onClick={props.handleFormSubmit} className=\"btn btn-success\">\r\n          Search\r\n        </button>\r\n        <button onClick={props.refreshPage} className=\"btn btn-danger\">\r\n          Refresh\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","//dependencies needed\r\nimport React from \"react\";\r\n\r\n//this function populates the employee card using props\r\nfunction EmployeeCard(props) {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>\r\n                    <img alt = {props.firstName} src = {props.picture} />\r\n                </th>\r\n                <td>{props.firstName}</td>\r\n                <td>{props.lastName}</td>\r\n                <td>{props.email}</td>\r\n                <td>{props.phone}</td>\r\n                <td>{props.city}</td>\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\n\r\nexport default EmployeeCard;","/* eslint-disable import/no-anonymous-default-export */\r\n//dependencies\r\nimport Axios from \"axios\";\r\n\r\n//this makes the API call to retrieve 20 users\r\nexport default {\r\n    search: function () {\r\n        return Axios.get(\"https://randomuser.me/api/?results=20&nat=us\");\r\n    },\r\n};","//DEPENDENCIES\r\nimport React, { Component } from \"react\";\r\nimport Container from \"./components/Container\";\r\nimport Col from \"./components/Col\";\r\nimport SearchForm from \"./components/SearchForm\";\r\nimport EmployeeCard from \"./components/EmployeeCard\";\r\nimport API from \"./utils/API\";\r\nimport \"./App.css\";\r\n\r\n\r\n// this section sets the state\r\nclass App extends Component {\r\n  state = { \r\n    employees: [], \r\n    search: \"\",\r\n    sortOrder: \"ASC\" \r\n  };\r\n\r\n  //this section allows the sorting via first name\r\n  sortFirstName() {\r\n    const sortedFirst = this.state.employees.sort(this.compareFirst);\r\n    this.setState({ employees: sortedFirst });\r\n    const orderFirst = this.state.sortOrder ? \"ASC\" : \"DESC\";\r\n    this.setState({ sortOrder: orderFirst })\r\n  };\r\n\r\n  compareFirst(a, b) {\r\n    if (a.firstName > b.firstName) return 1;\r\n    if (b.firstName > a.firstName) return -1;\r\n    return 0;\r\n  };\r\n\r\n  //this section allows sorting via last name\r\n  sortLastName() {\r\n    const sortedLast = this.state.employees.sort(this.compareLast);\r\n    this.setState({ employees: sortedLast });\r\n    const orderLast = this.state.sortOrder ? \"ASC\" : \"DESC\";\r\n    this.setState({ sortOrder: orderLast })\r\n  };\r\n\r\n  compareLast(a, b) {\r\n    if (a.lastName > b.lastName) return 1;\r\n    if (b.lastName > a.lastName) return -1;\r\n    return 0;\r\n  };\r\n\r\n  //this section allows for sorting via email\r\n  sortEmail() {\r\n    const sortedEmail = this.state.employees.sort(this.compareEmail);\r\n    this.setState({ employees: sortedEmail });\r\n    const orderEmail = this.state.sortOrder ? \"ASC\" : \"DESC\";\r\n    this.setState({ sortOrder: orderEmail })\r\n  };\r\n\r\n  compareEmail(a, b) {\r\n    if (a.email > b.email) return 1;\r\n    if (b.email > a.email) return -1;\r\n    return 0;\r\n  };\r\n\r\n  //get the data for the employees via the API\r\n  componentDidMount() {\r\n    API.search().then((res) => {\r\n      console.log(res);\r\n      this.setState({\r\n        employees: res.data.results.map((employee, i) => ({\r\n          firstName: employee.name.first,\r\n          lastName: employee.name.last,\r\n          picture: employee.picture.large,\r\n          email: employee.email,\r\n          phone: employee.phone,\r\n          city: employee.location.city,\r\n          key: i,\r\n        })),\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n  };\r\n\r\n  refreshPage() {\r\n    window.location.reload(false);\r\n  };\r\n\r\n\r\n  //this is the function for searching by name\r\n  searchName = (filter) => {\r\n    console.log(\"Search by name:\", filter);\r\n    const filterEmployees = this.state.employees.filter((employee) => {\r\n      let values = Object.values(employee).join(\"\").toLocaleLowerCase();\r\n      return values.indexOf(filter.toLowerCase()) !== -1;\r\n    });\r\n    this.setState({ employees: filterEmployees });\r\n  };\r\n\r\n  //this is an event handler for input changing\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  //this is an event handler for form submissions\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.searchName(this.state.search)\r\n  };\r\n\r\n\r\n  //this section renders the page using the various props to populate information\r\n  render() {\r\n    return (\r\n      <Container>\r\n          <div className = \"row\">\r\n            <Col size = \"md-3\">\r\n            </Col>\r\n            <Col size = \"md-6\">\r\n              <h2>Employee Directory</h2>\r\n              <SearchForm\r\n              value = {this.state.search}\r\n              handleInputChange = {this.handleInputChange}\r\n              handleFormSubmit = {this.handleFormSubmit}\r\n              />\r\n            </Col>\r\n            <Col size = \"md-3\">\r\n            </Col>\r\n          </div>\r\n\r\n          <div className = \"row\">\r\n            <Col size = \"md-12\">\r\n              <table className = \"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Photo</th>\r\n                    <th onClick={() => { this.sortFirstName() }}>First Name</th>\r\n                    <th onClick={() => { this.sortLastName() }}>Last Name</th>\r\n                    <th onClick={() => { this.sortEmail() }}>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>City</th>\r\n                  </tr>\r\n                </thead>\r\n                {[...this.state.employees].map((item) => (\r\n                  <EmployeeCard\r\n                  picture = {item.picture}\r\n                  firstName = {item.firstName}\r\n                  lastName = {item.lastName}\r\n                  email = {item.email}\r\n                  phone = {item.phone}\r\n                  city = {item.city}\r\n                  key = {item.key}\r\n                  />\r\n                ))}\r\n              </table>\r\n            </Col>\r\n          </div>   \r\n    </Container>\r\n    );\r\n  };\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}